services:
  app:
    build:  # Change from image to build
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    networks:
      - laravel_network
    environment:
      - COMPOSER_ALLOW_SUPERUSER=1
    depends_on:
      - mysql
    # No need for ports here; Nginx will handle it

  nginx:
    image: nginx:latest
    container_name: laravel_nginx
    ports:
      - "8000:80"  # Change to 8000 or any port you prefer
    volumes:
      - .:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel_network
    depends_on:
      - app

  mysql:
    image: mysql:8
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: laraveluser
      MYSQL_PASSWORD: laravelpassword
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"  # Changed host port to avoid conflicts
    networks:
      - laravel_network

  composer:
    image: composer:latest
    container_name: laravel_composer
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    command: ["composer", "install"]
    networks:
      - laravel_network

  ffmpeg:
    image: jrottenberg/ffmpeg:latest
    container_name: laravel_ffmpeg
    volumes:
      - .:/var/www/html
    networks:
      - laravel_network

volumes:
  mysql_data:
    driver: local

networks:
  laravel_network:
    driver: bridge
